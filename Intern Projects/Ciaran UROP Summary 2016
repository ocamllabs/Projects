At the start of the internship I was still getting to grips with OCaml and so spent the first week or so reading over Real World OCaml and various blog posts (especially Thomas Leonard’s blog - http://roscidus.com/blog/) and getting setup with OCaml, OPAM and also the basics of using Docker. In the second week I started a taster project to try to get IOCaml working from within Atom editor using the Hydrogen plugin, to allow Atom to act as a REPL so that snippets of OCaml code could be run directly from within the editor. I managed to get the basics working and found a couple of issues.

At the OCaml hackathon in the second week of my internship, I was looking for another project to work on and Thomas Leonard suggested I create a new shell for ocaml-9p, to allow execution of commands to manipulate files on a 9P server. There was an existing shell but it was mostly just for testing purposes and only provided basic command parsing, which caused problems with things like filenames with spaces in them. The new shell was intended to have the following features:
- Improved parsing to allow things like use of full paths, quotes to allow spaces in names etc.
- Tab completion of commands and arguments, mainly to be able to complete file paths.
- Lighter dependencies. The existing shell was dependent on some rather large libraries that were possibly overkill, for example dependent on the Camomile library for unicode support.

This project was what I worked on for the majority of the rest of the internship. I ended up creating two libraries - one to help create interactive shells, and a 9P client specific shell that depends on the shell library. The shell library is pure OCaml and almost entirely functional and free of side effects, except for the actual command line interface. I used Notty (https://github.com/pqwy/notty) for this, a declarative terminal library created by David Kaloper that made working with the terminal much easier. Commands are created using an applicative interface inspired by Cmdliner (http://erratique.ch/software/cmdliner) so using the library is fairly intuitive. The project covered a variety of topics and introduced me to a number of cool libraries and ideas, but most of all just taught me a lot of functional programming techniques. When I was completely stuck the developers of these libraries and other people at OCaml Labs were great at giving me some of their time to get me unstuck, which was extremely helpful. Special thanks to Thomas Leonard both for the idea and all his help with creating it.

I implemented all the features I intended to for the most part. Tab completion support is good and is based on the position in the abstract syntax tree so is accurate. I also added a few more features, notably syntax highlighting, also based on the AST. Unfortunately I didn’t implement the file path prediction very well yet - although the shell library provides good support, the current algorithm for the 9P specific shell requires better use of concurrency to make sure the user gets quick and up to date path prediction while not blocking for the asynchronous calls to the 9P server to read the names. I only managed a basic implementation before running out of time with the internship, but it shouldn’t be too tricky to come up with a good solution.

The shell is working but still requires a fair amount of work to reach the point I would consider it ‘releasable’. It is currently undocumented which is a priority. There are a number of partially complete features - most notably commands are missing a `--help` option and the user interface and named arguments don’t work completely. The Notty user interface could use improvements to display more information to the user about completions. All of this is logged with the project on Github. Also, by keeping the shell library separate from anything 9P specific, it should be easy to use it for other purposes. For example, the 9P client can connect to a Datakit server but it could be useful to create another shell with Datakit specific commands.

Shell library - https://github.com/ciaran16/shell
9P client - https://github.com/ciaran16/shell-9p
(Both will likely have their names changed at some point in the future).
